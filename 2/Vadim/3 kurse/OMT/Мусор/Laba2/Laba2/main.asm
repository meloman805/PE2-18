	.include "m16def.inc"
//директивы присвоения регистрам символических имен
	.def Temp=R16 ;присвоение регистру R16 имени Temp
	.def res=R11 ;регистру R11 результата вычисления
/*директивы присвоения численных значений константам и переменным*/
	.equ a=3
	.equ b=1
	.equ c=3
	.equ d=2
	.equ g=4
//директива присвоения исходного адреса
	.org 00
	rjmp start/*переход к нач. адр. разработанной программы */
	.org 0x2A /*директива присвоения начального адреса
для точки входа разработанной программы*/
	start: ;метка начального адреса (точки входа)
/*формирование исходного массива переменных в SRAM c использованием
прямой адресации*/
	ldi temp,0xFF
	out ddrc, temp;настройка порта С на вывод данных
	ldi temp,a;загрузка переменной «a» в память SRAM
	sts var,temp
	ldi temp,b;загрузка переменной «b» в память SRAM
	sts var+1,temp
	ldi temp,c;загрузка переменной «c» в память SRAM
	sts var+2,temp
	ldi temp,d;загрузка переменной «d» в память SRAM
	sts var+3,temp
//реализация вычислений
	ldi ZL,low(const*2) /*считывание конст. «g» из памяти программ CSEG*/
	ldi ZH,high(const*2)
	lpm R0,Z
	mul R0,R0;умножение g*g (результат размещается в R0)
	mov res,R0 ;перенос произведения g*g в рег. результата
	lpm R0,Z
	ldi temp, 2
	mul temp,R0 ;умножение g*2 (результат размещается в R0)
	ldi temp, a
	mul temp,R0 ;умножение g*2*a (результат размещается в R0)
	add res,R0	;сложение в регистр результата
	lds R0, var 
	mul R0,R0	;умножение a*a (результат размещается в R0)
	add res, R0 ;сложение в регистр результата
	lds temp, var
	lds R0, var+1
	add R0,temp 	;сложение a+b (результат размещается в R0)
	sub res, R0		;вычетание из регистра результата
	out PORTC,res;вывод результата в порт C
/*организация бесконечного цикла для завершения программы*/
	L1: rjmp L1
//размещение констант в памяти программ
	.CSEG;директива обращения к памяти программ
	.org$50 ;директива начального адреса констант (должен быть не меньше
;размера предшествующего программного кода). При отсутствии
;директивы, константы разместятся сразу за программой —
;это удобнее и предотвратит ошибки перекрытия (overlap)
	const: ;метка начала размещения констант
	.DW g/*запись в CSEG двух констант в формате
двухбайтного слова (старший байт нулевой)*/
/*резервирование ячеек памяти SRAM для размещения переменных «a» и «b» «c» «d» */
	.DSEG;директива обращения к памяти данных
	.org$75 ;директива начального адреса переменных
	var: /*метка начального адреса DSEG переменных*/
	.BYTE 4 /*резервирование в DSEG 4-х однобайтных ячеек*/
