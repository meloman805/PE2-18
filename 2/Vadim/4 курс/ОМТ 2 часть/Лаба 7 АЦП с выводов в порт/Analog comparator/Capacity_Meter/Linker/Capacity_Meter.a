;/*Программа измерения величины электрической емкости  с использованием
;времяимпульсного преобразования на базе аналогового компаратора*/
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void main(void)
; 0000 0005 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0006 // Input/Output Ports initialization
; 0000 0007 // Port A initialization
; 0000 0008 PORTA=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0009 DDRA=0xFF;          //выходы для вывода младшего байта емкости
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000A 
; 0000 000B // Port B initialization
; 0000 000C PORTB=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 000D DDRB=0x01;          //выход для заряда конденсатора
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 000E 
; 0000 000F // Port C initialization
; 0000 0010 PORTC=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0011 DDRC=0xFF;          //выходы для вывода старшего байте емкости
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0012 
; 0000 0013 // Port D initialization
; 0000 0014 PORTD=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0015 DDRD=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0016 
; 0000 0017 // Timer/Counter 1 initialization
; 0000 0018 // Clock source: System Clock
; 0000 0019 // Clock value: Timer1 Stopped
; 0000 001A // Mode: Normal top=0xFFFF
; 0000 001B // OC1A output: Discon.
; 0000 001C // OC1B output: Discon.
; 0000 001D // Noise Canceler: On
; 0000 001E // Input Capture on Rising Edge
; 0000 001F // Timer1 Overflow Interrupt: Off
; 0000 0020 // Input Capture Interrupt: On
; 0000 0021 // Compare A Match Interrupt: Off
; 0000 0022 // Compare B Match Interrupt: Off
; 0000 0023 TCCR1A=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0024 TCCR1B=0xC0;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0025 TCNT1H=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0026 TCNT1L=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0027 ICR1H=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0028 ICR1L=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0029 OCR1AH=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002A OCR1AL=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 002B OCR1BH=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 002C OCR1BL=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002D 
; 0000 002E // External Interrupt(s) initialization
; 0000 002F // INT0: Off
; 0000 0030 // INT1: On
; 0000 0031 // INT1 Mode: Rising Edge
; 0000 0032 // INT2: Off
; 0000 0033 GICR|=1<<INT1;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0034 MCUCR=1<<ISC11 | 1<<ISC10;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0035 MCUCSR=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0036 GIFR=1<<INTF1;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0037 
; 0000 0038 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0039 TIMSK=1<<TICIE1;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 003A 
; 0000 003B // Analog Comparator initialization
; 0000 003C // Analog Comparator: Off
; 0000 003D ACSR=1<<ACD;        //В исходном состоянии AC выключен, включается
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003E SFIOR=0x00;         //и подключается к схеме захвата при запуске измерения
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003F 
; 0000 0040 // Global enable interrupts
; 0000 0041 #asm("sei")
;PCODE: $00000041 VOL: 0
	sei
;PCODE: $00000042 VOL: 0
; 0000 0042 
; 0000 0043 while (1)
;PCODE: $00000043 VOL: 0
; 0000 0044       {
; 0000 0045       // Place your code here
; 0000 0046       };
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0047 }
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 004B {
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 004C TCNT1H=0x00;        //Обнулить TC1 для подготовки к измерению
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 004D TCNT1L=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 004E PORTB=PORTB|0x1;    /*организация заряда исследуемой емкости напряжением
; 0000 004F                     с выхода разряда 0  PORTB*/
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0050 TCCR1B=0xC2;        //запустить СТ1 на счет с коэффициентом деления 8 (f=1МГц)
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0051                     //системная тактовая частота 8 МГц
; 0000 0052 ACSR=1<<ACIC;       //Включить аналоговый компаратор и подкл. его к схеме захвата
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0053 }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;
;// Timer1 input capture interrupt service routine
;interrupt [TIM1_CAPT] void timer1_capt_isr(void)
; 0000 0057 {
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0058 PORTB=PORTB&~(1<<0);    //разрядить емкость
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0059 PORTA = ICR1L;          //вывести результат измерения на PORTA и  PORTC
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 005A PORTC = ICR1H;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 005B ACSR=1<<ACD;            //Отключить аналоговый компаратор во избежании
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 005C                         //генерации повторного прерывания по захвату в конце разряда C1
; 0000 005D }
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;
