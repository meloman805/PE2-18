;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;int g=45;
;float b=12.136;

	.DSEG
;
;  float result=2.643;
;
;char a = 0x32;              //выводимый символ Ц цифра Ђ3ї
;
;void main(void)
; 0000 000F {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0010 char str[15];  //выводима€ строка ТPROM_ELТ
; 0000 0011     char res[16];
; 0000 0012          float c=5.375;
; 0000 0013          float b=12.136;
; 0000 0014     float result=c+b;
; 0000 0015 
; 0000 0016      sprintf (str,  "Goncharenko A ");
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;	str -> Y+28
;	res -> Y+12
;	c -> Y+8
;	b -> Y+4
;	result -> Y+0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0017 // Alphanumeric LCD initialization
; 0000 0018 // Connections are specified in the
; 0000 0019 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 001A // RS - PORTC Bit 0
; 0000 001B // RD - PORTC Bit 1
; 0000 001C // EN - PORTC Bit 2
; 0000 001D // D4 - PORTC Bit 4
; 0000 001E // D5 - PORTC Bit 5
; 0000 001F // D6 - PORTC Bit 6
; 0000 0020 // D7 - PORTC Bit 7
; 0000 0021 // Characters/line: 16
; 0000 0022 // LCD module initialization
; 0000 0023 lcd_init(16);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0024 //_lcd_ready();             //этой функции в библиотеке alcd нет
; 0000 0025 //_lcd_write_data(0x01);    //очищаем экран
; 0000 0026 //_lcd_write_data(0x02);    //устанавливаем курсор в нулевую позицию диспле€*/
; 0000 0027 _lcd_write_data(0x0f);      /*¬ключаем экран, включаем курсор, изображение
; 0000 0028                             курсора делаем в виде мигающего знакоместа*/
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0029 
; 0000 002A 
; 0000 002B sprintf (res, "%4.3f  ", result);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 002C 
; 0000 002D lcd_gotoxy(0,0);            //переводим курсор на 3-е знакоместо 2-ой строки
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 002E 
; 0000 002F lcd_puts(str);              // выводим на экран строку
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0030 lcd_putchar (a);            //выводим на экран цифру 5
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0031 
; 0000 0032 lcd_gotoxy(0,1);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0033 lcd_puts(res);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0034 while (1);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0035 }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
