;/*Программа вырисовывания символа на матрице светодиодов. Здесь для организации
;временной задержки используется библиотечная функция delay_ms*/
;/*****************************************************
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;//Declare your global variables here
;//массивы чисел для всех 4-х портов, число элементов равно количеству точек рисуемого знака
;char A[13] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x00,0x00};

	.DSEG
;char B[13] = {0x01,0x00,0x00,0x08,0x10,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00};
;char C[13] = {0x01,0x00,0x00,0x08,0x10,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00};
;char D[13] = {0x00,0x01,0x02,0x04,0x00,0x20,0x40,0x80,0x00,0x00,0x00,0x00,0x00};
;
;void main(void)
; 0000 0017 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0018 // Declare your local variables here
; 0000 0019 char i;
; 0000 001A // Input/Output Ports initialization
; 0000 001B // Port A initialization
; 0000 001C //PORTA=0x00;           //POPTA - на вывод данных
; 0000 001D DDRA=0xFF;
;	i -> R17
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 001E 
; 0000 001F // Port B initialization
; 0000 0020 //PORTB=0x00;           //POPTB - на вывод данных
; 0000 0021 DDRB=0xFF;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0022 
; 0000 0023 // Port C initialization
; 0000 0024 //PORTC=0x00;           //POPTC - на вывод данных
; 0000 0025 DDRC=0xFF;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0026 
; 0000 0027 // Port D initialization
; 0000 0028 //PORTD=0x00;           //POPTD - на вывод данных
; 0000 0029 DDRD=0xFF;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 002A 
; 0000 002B while (1)
;PCODE: $00000016 VOL: 0
; 0000 002C       {
; 0000 002D       // Place your code here
; 0000 002E 
; 0000 002F       for (i=0;i<13;i++)
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0030             {
; 0000 0031             PORTA|=A[i];            //С операцией ИЛИ - вырисовывание знака
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0032             PORTB|=B[i];            //стаются включенными ранее зажженные светодиоды
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0033             PORTC|=C[i];            //без операции ИЛИ (простое присваивание элементов
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0034             PORTD|=D[i];            //массива - бегущий огонь по контуру символа
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0035             delay_ms(250);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0036             };
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0037       PORTA=0x00;                   //гасим все светодиоды на заданное время
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0038       PORTB=0x00;                   //задержки
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0039       PORTC=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 003A       PORTD=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 003B       delay_ms(250);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 003C       }                             //и затем начинаем цикл сначала
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 003D }                                   //конец главной функции
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
