;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Declare your global variables here
;//библиотека графики 10 десятичных цифр (знакогенератор)
;//////////////////////////0////1////2////3////4////5////6////7////8////9///
;flash char DIG_DEC[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
;//число в распакованном BCD (одна цифра в одном байте), ст. байт по младшему адресу
;unsigned char BCD_UNPACKED[4]={0,0,0,0};    //в исх. сост. на инд. 0000
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 000B {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000C // Place your code here
; 0000 000D if (MCUCR==0x0C)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000E                 {
; 0000 000F                 TCCR0=0x02;     //запуск таймера на счет
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0010                 MCUCR=0x08;     //Прерывание INt1 - по срезу
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0011                 }
; 0000 0012 else
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0013                 {
; 0000 0014                 unsigned char sot=0, des=0, bin_time;
; 0000 0015                 TCCR0=0x00;     //останов счетчика
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;	sot -> Y+2
;	des -> Y+1
;	bin_time -> Y+0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0016                 PORTA=TCNT0;    //вывод измерения в порт A (в двоичном коде)
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0017                 bin_time=TCNT0; //время в мкс в двоичном коде
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0018                 TCNT0=0x00;     //обнуление счетчика для послед. измерений
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0019                 MCUCR=0x0C;     //Прерывание INT1 - по фронту
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001A                 while (bin_time>=100)       //начинаем считать сотни
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001B                         {
; 0000 001C                         bin_time-=100; sot++;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 001D                         }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 001E                 while (bin_time>=10)        //начинаем считать десятки
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 001F                         {
; 0000 0020                         bin_time-=10; des++;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0021                         }                   //Здесь в BIN_TIME остаются единицы
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0022                 BCD_UNPACKED[1]=sot,  BCD_UNPACKED[2]=des, BCD_UNPACKED[3]=bin_time;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0023                 };
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0024 }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;
;void main(void)
; 0000 0027 {
;PCODE: $0000004F VOL: 0
; 0000 0028 // Port A initialization - вывод
; 0000 0029 PORTA=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 002A DDRA=0xFF;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 002B // Port С initialization - вывод
; 0000 002C PORTC=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 002D DDRC=0xFF;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 002E // Port B initialization - 4 мл. разряда на вывод данных
; 0000 002F PORTB=0xFF;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0030 DDRB=0x0F;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0031 
; 0000 0032 // Timer/Counter 0 initialization
; 0000 0033 // Clock source: System Clock
; 0000 0034 // Clock value: Timer 0 Stopped
; 0000 0035 // Mode: Normal top=FFh
; 0000 0036 // OC0 output: Disconnected
; 0000 0037 TCCR0=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0038 TCNT0=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0039 OCR0=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 003A 
; 0000 003B // External Interrupt(s) initialization
; 0000 003C // INT0: Off
; 0000 003D // INT1: On
; 0000 003E // INT1 Mode: Rising Edge
; 0000 003F // INT2: Off
; 0000 0040 GICR|=0x80;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0041 MCUCR=0x0C;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0042 MCUCSR=0x00;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0043 GIFR=0x80;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0044 
; 0000 0045 // Global enable interrupts
; 0000 0046 #asm("sei")
;PCODE: $0000006B VOL: 0
	sei
;PCODE: $0000006C VOL: 0
; 0000 0047 
; 0000 0048 while (1)
;PCODE: $0000006D VOL: 0
; 0000 0049       {
; 0000 004A       unsigned char i;
; 0000 004B       for (i=0;i<4;i++)
;PCODE: $0000006E VOL: 0
;	i -> Y+0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 004C         {
; 0000 004D         PORTB=0b11110111>>i;                //активиз. очередной общий катод
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 004E         PORTC=DIG_DEC[BCD_UNPACKED[i]];     //Графика очередного знакоместа (извлекаем из таблицы знакогенератора)
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 004F         delay_ms(5);                        //Задержка подсветки очередного знакоместа
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0050         PORTB=0x0F;                         //Гашение сегментов очередного знакоместа перед переходом к след.
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0051         PORTC=0;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0052         delay_us(50);                       //задержка гашения
;PCODE: $0000008C VOL: 0
; 0000 0053         };
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0054 
; 0000 0055       };
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0056 }
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
