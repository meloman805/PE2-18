;/*Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;Синтезировать генератор прямоугольных импульсов с частотой
;следования импульсов f  = 10 кГц. Генератор должен
;запускаться-останавливаться при каждом новом нажатии
;кнопки. Для определения активации кнопки использовать
;вход прерывания микроконтроллера INT1
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;bit i=0;                //определение глобальной битовой переменной i=0
;// External Interrupt 1 service routine, обработчик внешнего прерывания на входе IN1
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0012 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0013  if (i==0)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0014     {                   //Если генерация была остановлена, то запуск генерации
; 0000 0015     TCCR0=0x1A;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0016     i=1;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0017     }
; 0000 0018  else                   //Если есть генерация, то остановить ее
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0019     {
; 0000 001A     TCCR0=0x18;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001B     i=0;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001C     }
;PCODE: $0000001E VOL: 0
; 0000 001D }
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;
;void main(void)
; 0000 0020 {
;PCODE: $00000022 VOL: 0
; 0000 0021 
; 0000 0022 // Input/Output Ports initialization
; 0000 0023 // Port B initialization  (Разряд PortB.3 на вывод)
; 0000 0024 // Func7=in Func6=In Func5=In Func4=In Func3=Out Func2=In Func1=In Func0=In
; 0000 0025 PORTB=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0026 DDRB=0x08;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0027 
; 0000 0028 // Port D initialization (Все разряды PortB на ввод, без подключения внутр. подтяг. резисторов)
; 0000 0029 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 002A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 002B PORTD=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002C DDRD=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 002D 
; 0000 002E // Timer/Counter 0 initialization
; 0000 002F // Clock source: System Clock
; 0000 0030 // Clock value: Timer 0 Stopped
; 0000 0031 // Mode: CTC top=OCR0
; 0000 0032 // OC0 output: Toggle on compare match
; 0000 0033 TCCR0=0x18;             //Режим CTC, таймер CT0 остановлен
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0034 TCNT0=0x00;             //В TC0 - 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0035 OCR0=0x31;              //Регистр сравнения TC0 OCR0=49
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0036 
; 0000 0037 // External Interrupt(s) initialization
; 0000 0038 // INT0: Off
; 0000 0039 // INT1: On
; 0000 003A // INT1 Mode: Low level
; 0000 003B // INT2: Off
; 0000 003C GICR|=1<<INT1;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003D MCUCR=0x00;             //Запрос прерывания - низкий уровень на входе INT1
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 003E MCUCSR=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 003F GIFR=1<<INTF1;          //Сброс флага прерывания (записью лог. «1»!)
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0040 
; 0000 0041 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0042 TIMSK=0x00;             //Все прерывания от таймера запрещены
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0043 
; 0000 0044 
; 0000 0045 // Global enable interrupts
; 0000 0046 #asm("sei")
;PCODE: $0000003C VOL: 0
	sei
;PCODE: $0000003D VOL: 0
; 0000 0047 
; 0000 0048 while (1)               //бесконечный цикл
;PCODE: $0000003E VOL: 0
; 0000 0049       {
; 0000 004A       };
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 004B }
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
