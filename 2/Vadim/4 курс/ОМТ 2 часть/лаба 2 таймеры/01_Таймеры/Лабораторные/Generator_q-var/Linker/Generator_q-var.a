;//Системная тактовая частота 8 MHz
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;char a=1;                               //Глобальная переменная состояния цикла
;
;//Timer2 overflow interrupt service routine, обработчик прерывания по переполнению TC2
;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 0008 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0009 // Place your code here
; 0000 000A switch (a)
;PCODE: $0000000F VOL: 0
; 0000 000B     {
; 0000 000C     case 1: OCR2=63; break;         //Если a=1, то OCR2=64
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000D     case 2: OCR2=31; break;         //Если a=2, то OCR2=32
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 000E     case 3: OCR2=15; break;         //Если а=3, то OCR2=16
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 000F     case 4: OCR2=127; a=0; break;   //Если а=4, то OCR2=128; a=0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0010     default:a=0;                    //Если не выполняется ни одно из условий, a = 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0011     }
;PCODE: $0000002A VOL: 0
; 0000 0012 a++;
;PCODE: $0000002B VOL: 0
; 0000 0013 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;// Declare your global variables here
;
;void main(void)                         //Главная функция
; 0000 0018 {
;PCODE: $0000002F VOL: 0
; 0000 0019 // Declare your local variables here
; 0000 001A 
; 0000 001B // Input/Output Ports initialization
; 0000 001C 
; 0000 001D //Port A в режиме ввода
; 0000 001E PORTA=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 001F DDRA=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0020 
; 0000 0021 //Port B в режиме ввода
; 0000 0022 PORTB=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0023 DDRB=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0024 
; 0000 0025 //Port С в режиме ввода
; 0000 0026 PORTC=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0027 DDRC=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0028 
; 0000 0029 // PD.7 (выход схемы сравнения OC2) в режиме вывода
; 0000 002A PORTD=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 002B DDRD=0x80;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 002C 
; 0000 002D // Timer/Counter 2 initialization
; 0000 002E // Clock source: System Clock
; 0000 002F // Clock value: 125,000 kHz
; 0000 0030 // Mode: Fast PWM top=FFh
; 0000 0031 // OC2 output: Non-Inverted PWM
; 0000 0032 ASSR=0x00;              //асинхронный режим выключен
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0033 TCCR2=0x6C;             //FastPWM, неинвертированный ШИМ, K=64
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0034 TCNT2=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0035 OCR2=127;               //Для скважности q=2 в 1-ом периоде ШИМ-сигнала
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0036 
; 0000 0037 // External Interrupt(s) initialization
; 0000 0038 // INT0: Off
; 0000 0039 // INT1: Off
; 0000 003A // INT2: Off
; 0000 003B MCUCR=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 003C MCUCSR=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 003D 
; 0000 003E // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 003F TIMSK=1<<TOIE2;         //Разрешение прерывания по переполнению счетного регистра TC2
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0040 
; 0000 0041 // Analog Comparator initialization
; 0000 0042 // Analog Comparator: Off
; 0000 0043 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0044 ACSR=0x80;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0045 SFIOR=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0046 
; 0000 0047 // Global enable interrupts
; 0000 0048 #asm("sei")             //Разрешение прерываний
;PCODE: $00000052 VOL: 0
	sei
;PCODE: $00000053 VOL: 0
; 0000 0049 
; 0000 004A while (1)               //Бесконечный цикл
;PCODE: $00000054 VOL: 0
; 0000 004B       {
; 0000 004C       };
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 004D }
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
