;//Системная тактовая частота 8 MHz
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// декларация глобальной переменной
;char OV=0;
;
;void main(void)
; 0000 0008 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0009 // инициализация - PortA на выход
; 0000 000A PORTA=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000B DDRA=0xff;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000C 
; 0000 000D // инициализация - PortB на вход
; 0000 000E PORTB = 0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 000F DDRB = 0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0010 
; 0000 0011 // инициализация - PortC на выход
; 0000 0012 PORTC=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0013 DDRC=0xff;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0014 
; 0000 0015 // инициализация - PortD на вход
; 0000 0016 PORTD=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0017 DDRD=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0018 
; 0000 0019 // инициализация Timer/Counter 0
; 0000 001A // Источник сигнала – внешний, вывод T0 по фронту сигнала
; 0000 001B // Режимс Normal top=FFh
; 0000 001C TCCR0=0x00;                     //счетчик  остановлен
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001D TCNT0=0x00;                     //счетчик обнулен
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 001E 
; 0000 001F // инициализация Timer/Counter 2
; 0000 0020 // Источник сигнала: System Clock 8MHz
; 0000 0021 // Clock value: 7,813 kHz
; 0000 0022 // Mode: Normal top=FFh
; 0000 0023 // OC2 output: Disconnected
; 0000 0024 ASSR=0x00;                      //асинхронный режим отключен
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0025 TCCR2=0x00;                     //счетчик остановлен
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0026 
; 0000 0027 // инициализация внешнего прерывания External Interrupt 1
; 0000 0028 // INT1: On
; 0000 0029 // INT1 Mode: Rising Edge
; 0000 002A GICR|=1<<INT1;                  //разрешение внешнего прерывания Int1
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002B MCUCR=1<<ISC11 | 1<<ISC10;      //запуск по фронту  Int1
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 002C GIFR=1<<INTF1;                  //регистр состояний источников прерывания
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 002D 
; 0000 002E // Разрешение прерываний по переполнению таймеров Т0 И T2
; 0000 002F TIMSK=1<<TOIE0 | 1<<TOIE2;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0030 
; 0000 0031 // Глобальное разрешение прерываний
; 0000 0032 #asm("sei")
;PCODE: $0000002F VOL: 0
	sei
;PCODE: $00000030 VOL: 0
; 0000 0033 
; 0000 0034 while (1)                       //бесконечный цикл (имит. фоновой программы)
;PCODE: $00000031 VOL: 0
; 0000 0035       {
; 0000 0036       }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0037 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;
;//////////////////////ПОДПРОГРАММЫ ОБРАБОТКИ ПРЕРЫВАНИЙ/////////////////////////////
;
;/*обработка внешнего прерывания Int1, начало счета и формирования эталонного интервала*/
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 003D {
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 003E TCNT0=0;    //обнуление CT0 (младшего байта счетчика событий) для запуска счета с нуля
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 003F OV=0;       //Обнуление старшего байта счетчика событий для запуска счета с нуля
;PCODE: $0000003B VOL: 0
; 0000 0040 TCCR0=0x07; //запустить СТ0 в режиме счета внешних событий по фронту счетных импульсов
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0041 TCNT2=0xb2; //занесение в счетный регистр числа 178 для заданного времени досчета 10мс
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0042 TCCR2=0x07; //запустить СТ2 в режиме счета с коэффициентом деления 1024
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0043 }
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;
;/*Обработка прерывания по переполнению таймера T0*/
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0047 {
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0048 OV++;
;PCODE: $00000047 VOL: 0
; 0000 0049 }
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;
;/*Обработка прерывания по переполнению таймера T2 - эталонное время истекло*/
; interrupt [TIM2_OVF] void timer2_ovf_isr(void)
; 0000 004D {
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 004E // Реинициализация таймеров T2, T0
; 0000 004F TCCR2=0x00; // останов СТ2
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0050 TCCR0=0x00; //останов СТ0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0051 PORTA=TCNT0;//вывод младшего байта счетчика событий в PortA
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0052 PORTC=OV;   //вывод старшего байта счетчика событий в PortC
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0053 }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;
