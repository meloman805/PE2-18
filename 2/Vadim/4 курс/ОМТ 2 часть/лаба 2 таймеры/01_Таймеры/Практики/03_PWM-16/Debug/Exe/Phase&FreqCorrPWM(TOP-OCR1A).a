;/*******************************************************
;Chip type               : ATmega16
;AVR Core Clock frequency: 8,000000 MHz
;Phase&Frequency Correct PWM, для задания периода (OCR1A) и
;коэффициента заполнения (OCR1B) используем только младший
;байт соответствующего регистра, старшие байты нулевые.
;*******************************************************/
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;// Declare your global variables here
;void main(void)
; 0000 000B {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000C // Declare your local variables here
; 0000 000D 
; 0000 000E // Input/Output Ports initialization
; 0000 000F // Port D initialization
; 0000 0010 // Function: Bit7=In Bit6=In Bit5=In Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0011 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (1<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0012 // State: Bit7=T Bit6=T Bit5=T Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0013 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0014 
; 0000 0015 // Timer/Counter 1 initialization
; 0000 0016 // Clock source: System Clock
; 0000 0017 // Clock value: 8000,000 kHz
; 0000 0018 // Mode: Ph. & fr. cor. PWM top=OCR1A
; 0000 0019 // OC1A output: Disconnected
; 0000 001A // OC1B output: Non-Inverted PWM
; 0000 001B // Noise Canceler: Off
; 0000 001C // Input Capture on Falling Edge
; 0000 001D // Timer Period: 0 us
; 0000 001E // Output Pulse(s):
; 0000 001F // OC1B Period: 0 us
; 0000 0020 // Timer1 Overflow Interrupt: Off
; 0000 0021 // Input Capture Interrupt: Off
; 0000 0022 // Compare A Match Interrupt: Off
; 0000 0023 // Compare B Match Interrupt: Off
; 0000 0024 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (1<<WGM10);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0025 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (1<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0026 TCNT1H=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0027 TCNT1L=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0028 ICR1H=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0029 ICR1L=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002A OCR1AH=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 002B OCR1AL=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002C OCR1BH=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002D OCR1BL=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 002E 
; 0000 002F while (1)
;PCODE: $00000026 VOL: 0
; 0000 0030       {
; 0000 0031       OCR1BL=PINA;     //определяет коэффициент заполнения ШИМ-сигнала
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0032       OCR1AL=PINB;     //определяет период ШИМ-сигнала
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0033       }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0034 }
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
