;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;// Standard Input/Output functions
;#include <stdio.h>
;
;// Declare your global variables here
;float f=1.234567;

	.DSEG
;unsigned int i=15;
;int j=0x0A;
;unsigned char k=123;
;void main(void)
; 0000 000B {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000C PORTA=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000D DDRA=0xFF;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000E PORTB=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 000F DDRB=0xFF;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0010 
; 0000 0011 // Port D initialization
; 0000 0012 // Func7=In Func6=In Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0000 0013 // State7=T State6=T State5=0 State4=0 State3=T State2=T State1=T State0=T
; 0000 0014 PORTD=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0015 DDRD=0x30;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0016 
; 0000 0017 // Timer/Counter 1 initialization
; 0000 0018 // Clock source: System Clock
; 0000 0019 // Clock value: 8000,000 kHz
; 0000 001A // Mode: Fast PWM top=ICR1
; 0000 001B // OC1A output: Non-Inv.
; 0000 001C // OC1B output: Inverted
; 0000 001D // Noise Canceler: Off
; 0000 001E // Input Capture on Falling Edge
; 0000 001F // Timer1 Overflow Interrupt: Off
; 0000 0020 // Input Capture Interrupt: Off
; 0000 0021 // Compare A Match Interrupt: Off
; 0000 0022 // Compare B Match Interrupt: Off
; 0000 0023 TCCR1A=0xB2;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0024 TCCR1B=0x19;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0025 TCNT1H=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0026 TCNT1L=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0027 ICR1H=0xFF;         //Задание максимальной вершины счета (TOP)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0028 ICR1L=0xFF;         //в режиме fast PWM
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0029 OCR1AH=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 002A OCR1AL=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 002B OCR1BH=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002C OCR1BL=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 002D 
; 0000 002E // USART initialization
; 0000 002F // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0030 // USART Receiver: On
; 0000 0031 // USART Transmitter: On
; 0000 0032 // USART Mode: Asynchronous
; 0000 0033 // USART Baud Rate: 9600
; 0000 0034 UCSRA=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0035 UCSRB=0x18;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0036 UCSRC=0x86;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0037 UBRRH=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0038 UBRRL=0x33;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0039 printf("TEST terminal output-input\n\r");
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003A printf("i=%u j=%d k=%u f=%f\n\r", i, j, k, f);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 003B //printf("Input float f=");
; 0000 003C //scanf("%f",&f);   //Нет ввода значений float (только int и long)
; 0000 003D //printf("f=%f\n\r",f);
; 0000 003E while (1)
;PCODE: $00000051 VOL: 0
; 0000 003F       {
; 0000 0040       printf("Input  integer 1-65535 for OCR1A, OCR1B ");
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0041       scanf("%d",&i);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0042       j=i>>8;       //в j - старший байт i
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0043       OCR1AH=j; OCR1BH=j; OCR1AL=i; OCR1BL=i;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0044       }
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0045 }
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
