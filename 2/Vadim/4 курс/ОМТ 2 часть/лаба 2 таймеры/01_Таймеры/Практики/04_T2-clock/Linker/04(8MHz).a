;/*****************************************************
;Chip type               : ATmega16
;AVR Core Clock frequency: 8,000000 MHz
;*****************************************************/
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;// Declare your global variables here
;unsigned char seconds=0;        //переменные для отсчета времени
;unsigned char minutes=0;        //объявляем глобальными
;unsigned char hours=0;          //чтобы они были доступны всем функциям
;                                //и их можно было посмотреть в регистрах МК
;// Timer2 output compare interrupt service routine
;interrupt [TIM2_COMP] void timer2_comp_isr(void)
; 0000 000D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000E seconds++;
;PCODE: $0000000F VOL: 0
; 0000 000F if (seconds==60)
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0010     {
; 0000 0011     minutes++;
;PCODE: $00000013 VOL: 0
; 0000 0012     seconds=0;
;PCODE: $00000014 VOL: 0
; 0000 0013     if (minutes==60)
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0014         {
; 0000 0015         hours++;
;PCODE: $00000018 VOL: 0
; 0000 0016         minutes=0;
;PCODE: $00000019 VOL: 0
; 0000 0017         if (hours==24)
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0018             hours=0;
;PCODE: $0000001D VOL: 0
; 0000 0019         }
;PCODE: $0000001E VOL: 0
; 0000 001A 
; 0000 001B     }
;PCODE: $0000001F VOL: 0
; 0000 001C PORTA=seconds;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001D PORTB=minutes;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001E PORTC=hours;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001F }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;
;void main(void)
; 0000 0022 {
;PCODE: $0000002A VOL: 0
; 0000 0023 // Declare your local variables here
; 0000 0024 PORTA=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0025 DDRA=0x3F;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0026 
; 0000 0027 PORTB=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0028 DDRB=0x3F;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0029 
; 0000 002A PORTC=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 002B DDRC=0x3F;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 002C 
; 0000 002D PORTD=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002E DDRD=0x80;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 002F 
; 0000 0030 // Timer/Counter 2 initialization
; 0000 0031 // Clock source: System Clock
; 0000 0032 // Clock value: 7,813 kHz
; 0000 0033 // Mode: CTC top=OCR2
; 0000 0034 // OC2 output: Toggle on compare match
; 0000 0035 ASSR=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0036 TCCR2=0x1F;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0037 TCNT2=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0038 OCR2=255;           //Число в OCR2 соответствует возникновению прерывания
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0039                     //по переполнению в режиме CTC каждые 0,033 сек
; 0000 003A 
; 0000 003B // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 003C TIMSK=0x80;         //Разрешение прерывания по совпадению TCNT2
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 003D 
; 0000 003E // Global enable interrupts
; 0000 003F #asm("sei")
;PCODE: $00000045 VOL: 0
	sei
;PCODE: $00000046 VOL: 0
; 0000 0040 
; 0000 0041 while (1)
;PCODE: $00000047 VOL: 0
; 0000 0042       {
; 0000 0043       // Place your code here
; 0000 0044       }
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0045 }
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
