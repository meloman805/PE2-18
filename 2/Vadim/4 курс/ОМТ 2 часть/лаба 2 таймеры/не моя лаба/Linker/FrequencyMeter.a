;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;
;
;// первое прерывание по нисход€щеу фронту начинающие отсчЄт
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0008 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0009 // Place your code here
; 0000 000A TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);    //в этой
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000B TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);// и этой строке ммы запуск ...
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 000C 
; 0000 000D     TCNT1L=0x00;  // тут
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 000E TCNT1H=0x00;  // и тут мы обнул€ем его значение
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 000F }
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;
;// второе прерывание по нисход€щему фронту вывод€щие значение в порты ј и ¬
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0013 {
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0014 // Place your code here
; 0000 0015 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);//  а в этой
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0016 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10); // и этой останавливаем
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0017 PORTA=TCNT1L;    //а тут
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0018 PORTB=TCNT1H;       //и тут выводим его значение в порты
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0019 delay(5000);
;PCODE: $00000024 VOL: 0
; 0000 001A }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;
;
;// Declare your global variables here
;
;void main(void)
; 0000 0020 {
;PCODE: $00000029 VOL: 0
; 0000 0021 // Declare your local variables here
; 0000 0022 
; 0000 0023 // Input/Output Ports initialization
; 0000 0024 // Port A initialization, ¬се разр€ды порта A - на вывод с нулевыми нач. значени€ми
; 0000 0025 PORTA=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0026 DDRA=0xFF;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0027 
; 0000 0028 // Port B initialization
; 0000 0029 PORTB=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 002A DDRB=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002B 
; 0000 002C // Port C initialization
; 0000 002D PORTC=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 002E DDRC=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 002F 
; 0000 0030 // Port D initialization
; 0000 0031 PORTD=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0032 DDRD=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0033 
; 0000 0034 // Timer/Counter 0 initialization
; 0000 0035 // Clock source: System Clock
; 0000 0036 // Clock value: Timer 0 Stopped
; 0000 0037 // Mode: Normal top=FFh
; 0000 0038 // OC0 output: Disconnected
; 0000 0039 TCCR0=0x00;         //в исходном состо€нии TC0 остановлен и обнулен
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 003A TCNT0=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 003B OCR0=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 003C 
; 0000 003D // Timer/Counter 1 initialization
; 0000 003E // Clock source: System Clock
; 0000 003F // Clock value: 500,000 kHz
; 0000 0040 // Mode: Normal top=0xFFFF
; 0000 0041 // OC1A output: Disconnected
; 0000 0042 // OC1B output: Disconnected
; 0000 0043 // Noise Canceler: Off
; 0000 0044 // Input Capture on Falling Edge
; 0000 0045 // Timer Period: 0,13107 s
; 0000 0046 // Timer1 Overflow Interrupt: Off
; 0000 0047 // Input Capture Interrupt: Off
; 0000 0048 // Compare A Match Interrupt: On
; 0000 0049 // Compare B Match Interrupt: Off
; 0000 004A TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 004B TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 004C TCNT1H=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 004D TCNT1L=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 004E ICR1H=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 004F ICR1L=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0050 OCR1AH=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0051 OCR1AL=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0052 OCR1BH=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0053 OCR1BL=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0054 
; 0000 0055 // External Interrupt(s) initialization
; 0000 0056 // INT0: On
; 0000 0057 // INT0 Mode: Rising Edge
; 0000 0058 // INT1: On
; 0000 0059 // INT1 Mode: Falling Edge
; 0000 005A // INT2: Off
; 0000 005B GICR|=(1<<INT1) | (1<<INT0) | (0<<INT2);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 005C MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (1<<ISC00);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 005D MCUCSR=(0<<ISC2);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 005E GIFR=(1<<INTF1) | (1<<INTF0) | (0<<INTF2);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 005F 
; 0000 0060 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0061 TIMSK=1<<OCIE1A;			//–азрешение прерывани€ по совпадению A TC1
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0062 
; 0000 0063 // Analog Comparator initialization
; 0000 0064 // Analog Comparator: Off
; 0000 0065 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0066 ACSR=0x80;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0067 SFIOR=0x00;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0068 
; 0000 0069 // Global enable interrupts
; 0000 006A #asm("sei")         //–азрешение прерываний
;PCODE: $00000063 VOL: 0
	sei
;PCODE: $00000064 VOL: 0
; 0000 006B 
; 0000 006C while (1)           //Ѕесконечный цикл
;PCODE: $00000065 VOL: 0
; 0000 006D       {
; 0000 006E       };
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 006F }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
