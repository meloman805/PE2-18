;//Системная тактовая частота 8 MHz
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;bit b=0;                    //декларация глобальной битовой переменной
;// Timer1 input capture interrupt service routine, обработчик прерывания по захвату
;interrupt [TIM1_CAPT] void timer1_capt_isr(void)
; 0000 0006 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0007 if (b==0)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0008         {
; 0000 0009         TCCR1B=0xC2;        //Запуск T1 на счет с нулевого значения с делением на 8
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 000A         b=1;                //Изменение реакции на последующее прерывание
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 000B         }
; 0000 000C else
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 000D         {
; 0000 000E         TCCR1B=0xC0;        //Останов TC1
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 000F         PORTA=ICR1L;        //Вывод регистра захвата ICR1
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0010         PORTB=ICR1H;        //в порты A и B
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0011         TCNT1H=0x00;        //Обнуление таймера TC1 для последующих измерений
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0012         TCNT1L=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0013         b=0;                //Изменение реакции на последующее прерывание
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0014         };
;PCODE: $00000026 VOL: 0
; 0000 0015 }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;
;void main(void)             //главная функция
; 0000 0018 {
;PCODE: $0000002A VOL: 0
; 0000 0019 // Declare your local variables here
; 0000 001A 
; 0000 001B // Input/Output Ports initialization
; 0000 001C // Port A initialization, PORTA - на вывод с начальными нулевыми битами
; 0000 001D PORTA=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 001E DDRA=0xFF;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001F 
; 0000 0020 // Port B initialization, PORTB - на вывод с начальными нулевыми битами
; 0000 0021 PORTB=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0022 DDRB=0xFF;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0023 
; 0000 0024 // Port C initialization, PORTC - на ввод без подтягивающих резисторов
; 0000 0025 PORTC=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0026 DDRC=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0027 
; 0000 0028 // Port D initialization, PORTD - на ввод без подтягивающих резисторов
; 0000 0029 PORTD=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002A DDRD=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 002B 
; 0000 002C // Timer/Counter 1 initialization
; 0000 002D // Clock source: System Clock
; 0000 002E // Clock value: Timer1 Stopped
; 0000 002F // Mode: Normal top=FFFFh
; 0000 0030 // OC1A output: Discon.
; 0000 0031 // OC1B output: Discon.
; 0000 0032 // Noise Canceler: On
; 0000 0033 // Input Capture on Rising Edge
; 0000 0034 // Timer1 Overflow Interrupt: Off
; 0000 0035 // Input Capture Interrupt: On
; 0000 0036 // Compare A Match Interrupt: Off
; 0000 0037 // Compare B Match Interrupt: Off
; 0000 0038 TCCR1A=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0039 TCCR1B=0xC0;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003A TCNT1H=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003B TCNT1L=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003C ICR1H=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 003D ICR1L=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 003E OCR1AH=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 003F OCR1AL=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0040 OCR1BH=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0041 OCR1BL=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0042 
; 0000 0043 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0044 TIMSK=1<<TICIE1;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0045 
; 0000 0046 // Analog Comparator initialization
; 0000 0047 // Analog Comparator: Off
; 0000 0048 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0049 ACSR=1<<ACD;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 004A SFIOR=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 004B 
; 0000 004C // Global enable interrupts
; 0000 004D #asm("sei")
;PCODE: $00000055 VOL: 0
	sei
;PCODE: $00000056 VOL: 0
; 0000 004E 
; 0000 004F while (1)       //Бесконечный цикл
;PCODE: $00000057 VOL: 0
; 0000 0050       {
; 0000 0051       };
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0052 }
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
