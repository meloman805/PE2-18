;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;char a = 0x35;              //выводимый символ Ц цифра Ђ5ї
;char *str = " 'PROM_EL' ";  //выводима€ строка ТPROM_ELТ

	.DSEG
_0x3:
	.BYTE 0xC
;void main(void)
; 0000 000A {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000B 
; 0000 000C // Alphanumeric LCD initialization
; 0000 000D // Connections are specified in the
; 0000 000E // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 000F // RS - PORTC Bit 0
; 0000 0010 // RD - PORTC Bit 1
; 0000 0011 // EN - PORTC Bit 2
; 0000 0012 // D4 - PORTC Bit 4
; 0000 0013 // D5 - PORTC Bit 5
; 0000 0014 // D6 - PORTC Bit 6
; 0000 0015 // D7 - PORTC Bit 7
; 0000 0016 // Characters/line: 16
; 0000 0017 // LCD module initialization
; 0000 0018 lcd_init(16);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0019 //_lcd_ready();             //этой функции в библиотеке alcd нет
; 0000 001A //_lcd_write_data(0x01);    //очищаем экран
; 0000 001B //_lcd_write_data(0x02);    //устанавливаем курсор в нулевую позицию диспле€*/
; 0000 001C _lcd_write_data(0x0f);      /*¬ключаем экран, включаем курсор, изображение
; 0000 001D                             курсора делаем в виде мигающего знакоместа*/
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001E lcd_gotoxy(2,1);            //переводим курсор на 3-е знакоместо 2-ой строки
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 001F lcd_putchar (a);            //выводим на экран цифру 5
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0020 lcd_puts(str);              // выводим на экран строку
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0021 while (1);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0022 }
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
