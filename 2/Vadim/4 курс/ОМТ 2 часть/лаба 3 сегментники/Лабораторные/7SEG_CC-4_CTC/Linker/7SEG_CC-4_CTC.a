;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;//Declare your global variables here
;//библиотека графики 10 десятичных цифр (знакогенератор)
;//////////////////////////0////1////2////3////4////5////6////7////8////9///
;flash char DIG_DEC[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
;//число в распакованном BCD (одна цифра в одном байте), ст. байт по младшему адресу,
;unsigned char BCD_UNPACKED[4]={6,7,8,9};        //здесь задано заранее

	.DSEG
;unsigned char i=0;  //индекс элементов массива распакованных дес. цифр
;// Timer 0 output compare interrupt service routine
;interrupt [TIM0_COMP] void timer0_comp_isr(void)
; 0000 000C {                   //Обнулять здесь TC0 не надо - он сам сбросился при совпадении и генерации прерывания (режим CTC)

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000D PORTB=0x00;         //Гашение текущего знакоместа, необходимо для модели PROTEUS
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000E PORTC=0x00;         //Для реального индикатора необязательно
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 000F //delay_us(5);
; 0000 0010 PORTB=0b1000>>i;    //Включаем катодный ключ очередного знакоместа
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0011 PORTC=DIG_DEC[BCD_UNPACKED[i]];     //Код графики знака 7-сег. дисплея для очередного знакоместа - в порт C
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0012 i++;                //переходим к след. десятичной цифре в массиве распак. цифр
;PCODE: $0000001F VOL: 0
; 0000 0013 if (i>3) i=0;       //Если обработан последний элемент массива, начинаем новый цикл
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0014 }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;
;void main(void)     //Основная функция
; 0000 0017 {
;PCODE: $00000028 VOL: 0
; 0000 0018 // Input/Output Ports initialization
; 0000 0019 PORTB=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001A DDRB=0x0F;          //Разряды PB3...PB0 – на вывод данных (общие катоды)
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 001B PORTC=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001C DDRC=0xFF;          //Port C - на вывод данных (выводы сегментов)
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 001D 
; 0000 001E // Timer/Counter 0 initialization
; 0000 001F // Clock source: System Clock
; 0000 0020 // Clock value: 31,250 kHz
; 0000 0021 // Mode: CTC top=OCR0
; 0000 0022 // OC0 output: Disconnected
; 0000 0023 TCCR0=0x0C;         //запуск таймера с частотой Fclk/256=31,25kHz в режиме CTC
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0024 TCNT0=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0025 OCR0=77;            //загрузка регистра сравнения числом, обеспечивающем
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0026                     //счет от нуля до совпадения в течение 2.5 мс
; 0000 0027 
; 0000 0028 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0029 TIMSK=1<<OCIE0;                         //разрешение прерывания по совпадению TC0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002A #asm("sei")                             //Глобальное разрешение прерываний
;PCODE: $00000039 VOL: 0
	sei
;PCODE: $0000003A VOL: 0
; 0000 002B while (1)                               //Бесконечный цикл (фоновая программа)
;PCODE: $0000003B VOL: 0
; 0000 002C     {
; 0000 002D     };
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 002E }
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
